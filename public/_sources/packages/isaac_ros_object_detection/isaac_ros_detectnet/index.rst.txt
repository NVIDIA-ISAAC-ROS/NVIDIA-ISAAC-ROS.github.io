==============
|package_name|
==============

Quickstart
----------

1. Set up your development environment by following the instructions
   `here <https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common/blob/main/docs/dev-env-setup.md>`__.
2. Clone this repository and its dependencies under
   ``~/workspaces/isaac_ros-dev/src``.

   .. code:: bash

      cd ~/workspaces/isaac_ros-dev/src

   .. code:: bash

      git clone https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_object_detection

   .. code:: bash

      git clone https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_dnn_inference

   .. code:: bash

      git clone https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_image_pipeline

   .. code:: bash

      git clone https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_nitros

   .. code:: bash

      git clone https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common

3. Pull down a ROS Bag of sample data:

   .. code:: bash

      cd ~/workspaces/isaac_ros-dev/src/isaac_ros_object_detection/isaac_ros_detectnet && \
        git lfs pull -X "" -I "resources/rosbags"

4. Launch the Docker container using the ``run_dev.sh`` script:

   .. code:: bash

      cd ~/workspaces/isaac_ros-dev/src/isaac_ros_common && \
        ./scripts/run_dev.sh

5. Inside the container, build and source the workspace:

   .. code:: bash

      cd /workspaces/isaac_ros-dev && \
        colcon build --symlink-install && \
        source install/setup.bash

6. (Optional) Run tests to verify complete and correct installation:

   .. code:: bash

      colcon test --executor sequential

7. Run the quickstart setup script which will download the `PeopleNet
   Model <https://catalog.ngc.nvidia.com/orgs/nvidia/teams/tao/models/peoplenet>`__
   from NVIDIA GPU Cloud(NGC)

   .. code:: bash

      cd /workspaces/isaac_ros-dev/src/isaac_ros_object_detection/isaac_ros_detectnet && \
        ./scripts/setup_model.sh --height 632 --width 1200 --config-file resources/quickstart_config.pbtxt

8. Run the following launch file to spin up a demo of this package:

   .. code:: bash

      cd /workspaces/isaac_ros-dev && \
        ros2 launch isaac_ros_detectnet isaac_ros_detectnet_quickstart.launch.py

9. Visualize and validate the output of the package in the
   ``rqt_image_view`` window. After about a minute, your output should
   look like this:

   .. figure:: rqt_visualizer.png
      :alt: RQT showing detection boxes of an NVIDIA Mug and a tennis ball from simulation using DetectNet

      DetectNet output image showing a tennis ball correctly identified


API
----

Usage
^^^^^

.. code:: bash

   ros2 launch isaac_ros_detectnet isaac_ros_detectnet.launch.py label_list:=<list of labels> enable_confidence_threshold:=<enable confidence thresholding> enable_bbox_area_threshold:=<enable bbox size thresholding> enable_dbscan_clustering:=<enable dbscan clustering> confidence_threshold:=<minimum confidence value> min_bbox_area:=<minimum bbox area value> dbscan_confidence_threshold:=<minimum confidence for dbscan algorithm> dbscan_eps:=<epsilon distance> dbscan_min_boxes:=<minimum returned boxes> dbscan_enable_athr_filter:=<area-to-hit-ratio filter> dbscan_threshold_athr:=<area-to-hit ratio threshold> dbscan_clustering_algorithm:=<choice of clustering algorithm> bounding_box_scale:=<bounding box normalization value> bounding_box_offset:=<XY offset for bounding box>

ROS Parameters
^^^^^^^^^^^^^^

=============================== ============ ============================= ===========================================================================================================================================================================================================================
ROS Parameter                   Type         Default                       Description
=============================== ============ ============================= ===========================================================================================================================================================================================================================
``label_list``                  ``string[]`` ``{"person", "bag", "face"}`` The list of labels. These are loaded from labels.txt(downloaded with the model)
``confidence_threshold``        ``double``   ``0.35``                      The min value of confidence used to threshold detections before clustering
``min_bbox_area``               ``double``   ``100``                       The min value of bouding box area used to threshold detections before clustering
``dbscan_confidence_threshold`` ``double``   ``0.35``                      Holds the epsilon to control merging of overlapping boxes. Refer to OpenCV groupRectangles and DBSCAN documentation for more information on epsilon.
``dbscan_eps``                  ``double``   ``0.7``                       Holds the epsilon to control merging of overlapping boxes. Refer to OpenCV groupRectangles and DBSCAN documentation for more information on epsilon.
``dbscan_min_boxes``            ``int``      ``1``                         The minimum number of boxes to return.
``dbscan_enable_athr_filter``   ``int``      ``0``                         Enables the area-to-hit ratio (ATHR) filter. The ATHR is calculated as: **ATHR = sqrt(clusterArea) / nObjectsInCluster.**
``dbscan_threshold_athr``       ``double``   ``0.0``                       The ``area-to-hit`` ratio threshold.
``dbscan_clustering_algorithm`` ``int``      ``1``                         The clustering algorithm selection. (``1``: Enables DBScan clustering, ``2``: Enables Hybrid clustering, resulting in more boxes that will need to be processed with NMS or other means of reducing overlapping detections.
``bounding_box_scale``          ``double``   ``35.0``                      The scale parameter, which should match the training configuration.
``bounding_box_offset``         ``double``   ``0.0``                       Bounding box offset for both X and Y dimensions.
=============================== ============ ============================= ===========================================================================================================================================================================================================================

ROS Topics Subscribed
^^^^^^^^^^^^^^^^^^^^^

============== ==================================================================================================================================================================== ===============================================================
ROS Topic      Interface                                                                                                                                                            Description
============== ==================================================================================================================================================================== ===============================================================
``tensor_sub`` `isaac_ros_tensor_list_interfaces/TensorList <https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common/blob/main/isaac_ros_tensor_list_interfaces/msg/TensorList.msg>`__ The tensor that represents the inferred aligned bounding boxes.
============== ==================================================================================================================================================================== ===============================================================

ROS Topics Published
^^^^^^^^^^^^^^^^^^^^

======================== =============================================================================================================================== ==================================================
ROS Topic                Interface                                                                                                                       Description
======================== =============================================================================================================================== ==================================================
``detectnet/detections`` `vision_msgs/Detection2DArray <https://github.com/ros-perception/vision_msgs/blob/ros2/vision_msgs/msg/Detection2DArray.msg>`__ Aligned image bounding boxes with detection class.
======================== =============================================================================================================================== ==================================================


.. |package_name| replace:: ``isaac_ros_detectnet``