==============
|package_name|
==============

:ir_github:`<isaac_ros_cumotion> <isaac_ros_cumotion_moveit>`

Quickstart
----------

Set Up Development Environment
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1. Set up your development environment by following the instructions in :doc:`Getting Started </getting_started/dev_env_setup>`.

2. Clone ``isaac_ros_common`` under ``${ISAAC_ROS_WS}/src``.

   .. code:: bash

      cd ${ISAAC_ROS_WS}/src && \
         git clone :ir_clone:`<isaac_ros_common>`


Install |package_name| and Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. include:: _snippets/install.rst


Set Up MoveIt 2 with cuMotion
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Complete the following steps for your selected robot.

.. tabs::

   .. tab:: Universal Robot (UR)

      1. **Optional:** If running on a physical UR robot, install the following support package:

         .. code:: bash

            sudo apt install ros-humble-ur-bringup

      2. Generate a URDF for the UR10e from the corresponding xacro:

         .. code:: bash

            mkdir -p ${ISAAC_ROS_WS}/isaac_ros_assets/urdf && \
                xacro -o ${ISAAC_ROS_WS}/isaac_ros_assets/urdf/ur10e.urdf /opt/ros/humble/share/ur_description/urdf/ur.urdf.xacro ur_type:=ur10e name:=ur10e

      3. Launch MoveIt (including RViz).

         .. code:: bash

            ros2 launch isaac_ros_cumotion_examples ur.launch.py ur_type:=ur10e

      4. In a separate terminal, run the cuMotion planner node.  Remember to first ``source install/setup.bash`` if package was built from source.

         .. code:: bash

            ros2 run isaac_ros_cumotion cumotion_planner_node --ros-args -p robot:=ur10e.xrdf -p urdf_path:=${ISAAC_ROS_WS}/isaac_ros_assets/urdf/ur10e.urdf

   .. tab:: Franka

      1. Launch MoveIt (including RViz).

         .. code:: bash

            ros2 launch isaac_ros_cumotion_examples franka.launch.py

      2. In a separate terminal, run the cuMotion planner node.  Remember to first ``source install/setup.bash`` if package was built from source.

         .. code:: bash

            ros2 run isaac_ros_cumotion cumotion_planner_node --ros-args -p robot:=franka.xrdf -p urdf_path:=/opt/ros/humble/share/moveit_resources_panda_description/urdf/panda.urdf

   .. tab:: Another Robot

      1. Create a MoveIt configuration for your robot using the MoveIt setup assistant.

      2. cuMotion requires a URDF as well as an
         :ref:`XRDF <concepts/manipulation/xrdf:Extended Robot Description Format (XRDF)>` file for the robot.
         URDFs are available for most common robot arms, but it may be necessary to create an XRDF file.  This can
         be done by hand (e.g., using an existing XRDF file as a reference) or by using the
         `Robot Description Editor <https://docs.omniverse.nvidia.com/isaacsim/latest/advanced_tutorials/tutorial_motion_generation_robot_description_editor.html>`_
         in Isaac Sim 4.0 or later.

      3. Copy cuMotion's planning configuration file to the MoveIt ``config`` directory for your robot:

         .. code:: bash

            cp ${ISAAC_ROS_WS}/src/isaac_ros_cumotion/isaac_ros_cumotion_moveit/config/isaac_ros_cumotion_planning.yaml \
                PATH/TO/ROBOT_moveit_config/config/

      4. In the MoveIt launch file for your robot (e.g., ``<ROBOT>_moveit_config/launch/<ROBOT>_moveit.launch.py``),
         add the following entry to the ``parameters`` list of the ``Node()`` constructor for ``move_group_node``:

         .. code:: python

            { "planning_pipelines": ["ompl", "isaac_ros_cumotion"] }

      5. Install any additional required packages for your robot, and run ``source install/setup.bash`` if building from source.

      6. Launch MoveIt (including RViz) using a suitable launch file for your robot, e.g.:

         .. code:: bash

            ros2 launch ROBOT_moveit_config ROBOT_moveit.launch.py

      7. In a separate terminal, run the cuMotion planner node.  Remember to first run ``source install/setup.bash`` if package was built from source.

         .. code:: bash

            ros2 run isaac_ros_cumotion cumotion_planner_node --ros-args -p robot:=/path/to/ROBOT.xrdf -p urdf_path:=/path/to/ROBOT.urdf


Using the cuMotion Planner in MoveIt
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enable cuMotion by ensuring that ``isaac_ros_cumotion`` and ``cuMotion`` are selected within the **"Planning Library"** pane within the **"Context"** tab in
the bottom left corner of the RViz window.

.. figure:: :ir_lfs:`<resources/isaac_ros_docs/repositories_and_packages/isaac_ros_cumotion/isaac_ros_cumotion_moveit/moveit_context.png>`
    :align: center

Then select a target pose for the robot end effector, and click the **"Plan"** button in the **"Planning"** tab.
For a demonstration of collision-aware planning, first add one or more obstacles in the **"Scene Objects"** tab.

.. note::

  The **"Execute"** and **"Plan & Execute"** buttons in RViz will only work if a physical robot is connected or if the
  robot is emulated in the corresponding robot driver or via an external simulator.  The MoveIt configuration for Franka
  includes such emulation via a "fake hardware" interface, but the same is not true for UR, which would require an
  external simulator such as URSim.

.. figure:: :ir_lfs:`<resources/isaac_ros_docs/repositories_and_packages/isaac_ros_cumotion/isaac_ros_cumotion_moveit/moveit_planning.gif>`
    :align: center

.. warning::

  In normal operation, only a single MoveIt ``move_group`` node should be running at a time.  If the node fails to
  exit cleanly, however, it may result in two nodes running when the graph is next launched.  RViz then connects
  to both instances, which results in both requesting a plan from the cuMotion planner node via a ``MoveGroup`` action
  at nearly the same time.  The second to arrive preempts the first without waiting for in-flight CUDA operations to
  complete, possibly resulting in "CUDA invalid" errors.

  If such errors are observed, please ensure that only a single ``move_group`` node is running.  The cuMotion planner
  node will be made more robust in a future release.

Try More Examples
-----------------

To continue your exploration, check out the following suggested examples:

.. toctree::
   :maxdepth: 1

   Tutorial for cuMotion MoveIt plugin with Isaac Sim </concepts/manipulation/cumotion_moveit/tutorial_isaac_sim.rst>

   Tutorial for cuMotion MoveIt plugin with perception </reference_workflows/isaac_manipulator/tutorials/tutorial_e2e.rst>


Troubleshooting
---------------

Isaac ROS Troubleshooting
~~~~~~~~~~~~~~~~~~~~~~~~~

For solutions to problems with Isaac ROS, see :doc:`troubleshooting </troubleshooting/index>`.

.. |package_name| replace:: ``isaac_ros_cumotion_moveit``
