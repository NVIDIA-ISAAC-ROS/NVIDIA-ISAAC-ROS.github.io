Tutorial for Freespace Segmentation with Isaac Sim
==================================================


Overview
------------

This tutorial demonstrates how to use a `Isaac
Sim <https://developer.nvidia.com/isaac-sim>`__ and
`isaac_ros_bi3d_freespace <https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_proximity_segmentation>`__
to create a local occupancy grid.

Last validated with `Isaac Sim
2022.2.1 <https://docs.omniverse.nvidia.com/app_isaacsim/app_isaacsim/release_notes.html#id1>`__

Tutorial Walkthrough
--------------------

1.  Complete steps 1-7 listed in the `Quickstart
    section <../README.md#quickstart>`__ of the main README.
2.  Install and launch Isaac Sim following the steps in the `Isaac ROS
    Isaac Sim Setup
    Guide <https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common/blob/main/docs/isaac-sim-sil-setup.md>`__
3.  Open the Isaac ROS Common USD scene (using the *Content* tab)
    located at:

    .. code:: text

       http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/Isaac/2022.2.1/Isaac/Samples/ROS2/Scenario/carter_warehouse_apriltags_worker.usd

    And wait for it to load completely.
4.  Go to the *Stage* tab and select
    ``/World/Carter_ROS/ROS_Cameras/ros2_create_camera_right_info``,
    then in *Property* tab *-> OmniGraph Node -> Inputs -> stereoOffset
    X* change ``0`` to ``-175.92``.

    
5.  Enable the right camera for a stereo image pair. Go to the *Stage*
    tab and select
    ``/World/Carter_ROS/ROS_Cameras/enable_camera_right``, then tick the
    *Condition* checkbox.

    
6.  Project the ``base_link`` frame to the ground floor so that we can
    anchor our occupancy grid. Go to the Stage tab and select
    ``/World/Carter_ROS/chassis_link/base_link``. In the *Property* tab,
    change the *Transform -> Translate -> Z* value from ``0`` to
    ``-0.24``.

    
7.  Disable the clock reset when simulation is stopped. Go to the
    *Stage* tab and select ``/World/Clock/isaac_read_simulation_time``,
    then untick the *Reset On Stop* checkbox.

    
8.  Press **Play** to start publishing data from the Isaac Sim
    application.

    
9.  Open a second terminal and attach to the container:

    .. code:: bash

       cd ~/workspaces/isaac_ros-dev/src/isaac_ros_common && \
       ./scripts/run_dev.sh

10. In the second terminal, start the ``isaac_ros_bi3d`` node using the
    launch files:

    .. code:: bash

       ros2 launch isaac_ros_bi3d_freespace isaac_ros_bi3d_freespace_isaac_sim.launch.py \
       featnet_engine_file_path:=/tmp/models/bi3d/bi3dnet_featnet.plan \
       segnet_engine_file_path:=/tmp/models/bi3d/bi3dnet_segnet.plan \
       max_disparity_values:=32

    You should see a RViz window, as shown below:

    
11. Optionally, you can run the visualizer script to visualize the
    disparity image.

    .. code:: bash

       ros2 run isaac_ros_bi3d isaac_ros_bi3d_visualizer.py --disparity_topic bi3d_mask

    

