Tutorial for DNN Stereo Depth Estimation with Isaac Sim
=======================================================


Overview
------------

This tutorial walks you through a graph to `estimate
depth <https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_dnn_stereo_disparity>`__
with stereo images from Isaac Sim.

Last validated with `Isaac Sim
2022.2.1 <https://docs.omniverse.nvidia.com/app_isaacsim/app_isaacsim/release_notes.html#id1>`__

Tutorial Walkthrough
--------------------

1. Complete steps 1-7 listed in the `Quickstart
   section <../README.md#quickstart>`__ of the main README.
2. Install and launch Isaac Sim following the steps in the `Isaac ROS
   Isaac Sim Setup
   Guide <https://github.com/NVIDIA-ISAAC-ROS/isaac_ros_common/blob/main/docs/isaac-sim-sil-setup.md>`__
3. Open the Isaac ROS Common USD scene (using the *Content* tab) located
   at:

   .. code:: text

      http://omniverse-content-production.s3-us-west-2.amazonaws.com/Assets/Isaac/2022.2.1/Isaac/Samples/ROS2/Scenario/carter_warehouse_apriltags_worker.usd

   Wait for the scene to load completely.
4. Go to the *Stage* tab and select
   ``/World/Carter_ROS/ROS_Cameras/ros2_create_camera_right_info``, then
   in *Property* tab *-> OmniGraph Node -> Inputs -> stereoOffset X*
   change ``0`` to ``-175.92``.

   
5. Enable the right camera for a stereo image pair. Go to the *Stage*
   tab and select ``/World/Carter_ROS/ROS_Cameras/enable_camera_right``,
   then tick the *Condition* checkbox.

   
6. Press **Play** to start publishing data from the Isaac Sim
   application.

   
7. Open a second terminal and attach to the container:

   .. code:: bash

      cd ~/workspaces/isaac_ros-dev/src/isaac_ros_common && \
      ./scripts/run_dev.sh

8. In the second terminal, start the ``isaac_ros_ess`` node using the
   launch files:

   .. code:: bash

      ros2 launch isaac_ros_ess isaac_ros_ess_isaac_sim.launch.py engine_file_path:=/workspaces/isaac_ros-dev/src/isaac_ros_dnn_stereo_disparity/resources/ess.engine

9. Optionally, you can run the visualizer script to visualize the
   disparity image.

   .. code:: bash

      ros2 run isaac_ros_ess isaac_ros_ess_visualizer.py

   

