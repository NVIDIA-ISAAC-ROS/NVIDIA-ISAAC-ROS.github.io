Tutorial for cuVGL Localization
===============================

Localization by using Isaac Perceptor
-------------------------------------

If you want to use cuVGL in ROS 2 along with Isaac Perceptor,
please follow the :doc:`/reference_workflows/isaac_perceptor/tutorial_mapping_and_localization` for more details.

Use Global Localization Node in ROS 2
-------------------------------------

You can use cuVGL in ROS 2 without using Isaac Perceptor.
You can:

* directly include the :ir_repo:`visual_global_localization.include.launch <isaac_ros_visual_global_localization> <isaac_ros_visual_global_localization/launch/include/visual_global_localization.include.launch>` in your launch file
* use the following command to launch the localization node

    .. code-block:: bash

        ros2 launch visual_global_localization isaac_ros_visual_global_localization_node.launch.py


See :doc:`/repositories_and_packages/isaac_ros_mapping_and_localization/isaac_ros_visual_global_localization/index`
to build or install the package.


This launches the localization node with the default parameters.
You can change the parameters by modifying the ``include/visual_global_localization.launch.py`` file
or by passing the parameters as arguments, for details see :doc:`/repositories_and_packages/isaac_ros_mapping_and_localization/isaac_ros_visual_global_localization/index`.

Use cuVGL in C++
----------------
The :doc:`isaac_ros_visual_global_localization </repositories_and_packages/isaac_ros_mapping_and_localization/isaac_ros_visual_global_localization/index>`
ROS 2 package serves as a demonstration for using the cuVGL libraries,
see the source code GitHub: :ir_github:`<isaac_ros_mapping_and_localization> <isaac_ros_visual_global_localization>`
