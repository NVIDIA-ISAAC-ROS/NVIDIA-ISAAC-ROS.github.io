==============
|package_name|
==============

Overview
--------

Isaac ROS MoveIt Benchmark consists of utility packages to measure the performance
of various `MoveIt 2 <https://moveit.picknik.ai/main/index.html>`__ plugins, including Isaac ROS cuMotion, on various motion planning problems.
Metrics related to planner performance, such as motion time and planning time, as well as
metrics related to system usage, such as CPU usage are computed to provide a comprehensive
view of planner performance.

The problems are sourced from the `MotionBenchmarkMaker (MBM) <https://arxiv.org/abs/2112.06402>`__ dataset. Currently, the benchmark supports
the `UR5 CB3 <https://www.universal-robots.com/products/cb3/>`__ robot and the `Franka <https://franka.de/>`__ robot.

The ``isaac_ros_moveit_benchmark`` provides a standardized, convenient method to benchmark
various planners that are available as  `MoveIt 2 <https://moveit.picknik.ai/main/index.html>`__ plugins. 

To see how ``isaac_ros_moveit_benchmark`` is used to benchmark some specific planners, please consult
the following packages:

* UR5:

  * :ir_repo:`UR5 cuMotion Benchmark <isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/ur5/isaac_ros_ur5_cumotion_benchmark>`

  * :ir_repo:`UR5 OMPL Benchmark <isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/ur5/isaac_ros_ur5_ompl_benchmark>`

* Franka:

  * :ir_repo:`Franka cuMotion Benchmark <isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/franka/isaac_ros_franka_cumotion_benchmark>`

  * :ir_repo:`Franka OMPL Benchmark <isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/franka/isaac_ros_franka_ompl_benchmark>`

Setup
-----

Set Up Development Environment
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#. Set up your development environment by following the instructions in :doc:`Getting Started </getting_started/dev_env_setup>`.

#. Clone ``isaac_ros_common`` under ``${ISAAC_ROS_WS}/src``.

   .. code:: bash

      cd ${ISAAC_ROS_WS}/src && \
         git clone :ir_clone:`<isaac_ros_common>`

Build the Benchmarks
^^^^^^^^^^^^^^^^^^^^

.. tabs::

   .. tab:: Binary Package

      1. Launch the Docker container using the ``run_dev.sh`` script:

         .. code:: bash

            cd ${ISAAC_ROS_WS}/src/isaac_ros_common && \
            ./scripts/run_dev.sh

      2. Install the prebuilt Debian package:

         :ir_apt:

         .. code:: bash

            sudo apt-get install -y ros-humble-isaac-ros-ur5-cumotion-benchmark ros-humble-isaac-ros-ur5-ompl-benchmark ros-humble-isaac-ros-franka-cumotion-benchmark ros-humble-isaac-ros-franka-ompl-benchmark

   .. tab:: Build from Source

      1. Clone this repository under ``${ISAAC_ROS_WS}/src``:

         .. code:: bash

            cd ${ISAAC_ROS_WS}/src && \
               git clone :ir_clone:`<isaac_ros_benchmark>`

      2. Launch the Docker container using the ``run_dev.sh`` script:

         .. code:: bash

            cd ${ISAAC_ROS_WS}/src/isaac_ros_common && \
            ./scripts/run_dev.sh

      3. Use ``rosdep`` to install the package's dependencies:

         :ir_apt:

         .. code:: bash

            rosdep update && \
            rosdep install --from-paths ${ISAAC_ROS_WS}/src/isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/ur5/isaac_ros_ur5_cumotion_benchmark --ignore-src -y && \
            rosdep install --from-paths ${ISAAC_ROS_WS}/src/isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/ur5/isaac_ros_ur5_ompl_benchmark --ignore-src -y && \
            rosdep install --from-paths ${ISAAC_ROS_WS}/src/isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/franka/isaac_ros_franka_cumotion_benchmark --ignore-src -y && \
            rosdep install --from-paths ${ISAAC_ROS_WS}/src/isaac_ros_benchmark/benchmarks/isaac_ros_moveit_benchmark/isaac_ros_moveit_robot_benchmark/franka/isaac_ros_franka_ompl_benchmark --ignore-src -y

      4. Build the package from source:

         .. code:: bash

            cd ${ISAAC_ROS_WS}/ && \
               colcon build --symlink-install --packages-up-to isaac_ros_ur5_cumotion_benchmark isaac_ros_ur5_ompl_benchmark isaac_ros_franka_cumotion_benchmark isaac_ros_franka_ompl_benchmark

      5. Source the ROS workspace:

         .. note::

            Make sure to repeat this step in **every** terminal created inside the Docker container.

            Because this package was built from source, the enclosing workspace must be sourced for ROS to be able to find the package's contents.

         .. code:: bash

            source install/setup.bash

Running the Benchmark
---------------------

.. tabs::
   .. group-tab:: UR5 cuMotion

      .. code:: bash

         launch_test $(ros2 pkg prefix isaac_ros_ur5_cumotion_benchmark)/share/isaac_ros_ur5_cumotion_benchmark/ur5_cumotion_benchmark_scripts/ur5_cumotion_mbm.py

   .. group-tab:: UR5 OMPL

      .. code:: bash

         launch_test $(ros2 pkg prefix isaac_ros_ur5_ompl_benchmark)/share/isaac_ros_ur5_ompl_benchmark/ur5_ompl_benchmark_scripts/ur5_ompl_mbm.py

   .. group-tab:: Franka cuMotion

      .. code:: bash

         launch_test $(ros2 pkg prefix isaac_ros_franka_cumotion_benchmark)/share/isaac_ros_franka_cumotion_benchmark/franka_cumotion_benchmark_scripts/franka_cumotion_mbm.py

   .. group-tab:: Franka OMPL

      .. code:: bash

         launch_test $(ros2 pkg prefix isaac_ros_franka_ompl_benchmark)/share/isaac_ros_franka_ompl_benchmark/franka_ompl_benchmark_scripts/franka_ompl_mbm.py

Available Metrics
-----------------

.. list-table::
   :header-rows: 1

   * - Metric Name
     - Explanation
     - Interpretation

   * - Success Rate
     - The percentage of successful plans over all problems
     - A higher success rate is better, as it implies the planner can work across a variety of scenarios.

   * - Planning Time
     - The time taken by the planner to compute a valid plan.
     - A lower planning time is better, as it implies the planner can generate plans faster.

   * - Motion Time
     - The time it would take the robot to execute the plan generated by the planner.
     - A lower motion time is better, as a robot can execute the plan faster.

   * - Path Length
     - The total path length of the plan in radians (as measured in joint space, using an unweighted L2 norm)
     - A lower path length is better, as it means the robot needs to move less to execute the plan.

   * - Jerk
     - The maximum jerk along the entire planned path
     - A lower jerk is better, as it means the path is more smooth, enabling a robot to execute it more easily.

.. |package_name| replace:: ``isaac_ros_moveit_benchmark``
