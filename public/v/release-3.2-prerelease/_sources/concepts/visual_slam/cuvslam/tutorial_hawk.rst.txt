Tutorial for Visual SLAM Using a HAWK Camera
=====================================================================

Overview
------------

This tutorial walks you through setting up
:ir_repo:`Isaac ROS Visual SLAM <isaac_ros_visual_slam>` with
a :ir_repo:`Hawk camera <isaac_ros_argus_camera>`.

Tutorial Walkthrough - VSLAM Execution
--------------------------------------

1. Complete the :doc:`Hawk setup tutorial </getting_started/hardware_setup/sensors/hawk_setup>`.

2. Complete the VSLAM quickstart :ref:`here <repositories_and_packages/isaac_ros_visual_slam/isaac_ros_visual_slam/index:quickstart>`.

3. [Terminal 1] Inside the container, install the dependencies:

   :ir_apt:

   .. code:: bash

      sudo apt-get install -y \
         ros-humble-isaac-ros-correlated-timestamp-driver \
         ros-humble-isaac-ros-hawk \
         ros-humble-isaac-ros-image-proc \
         ros-humble-isaac-ros-imu-bmi088

4. [Terminal 1] Run the launch file inside the container and wait for 5 seconds:

   .. code:: bash

      ros2 launch isaac_ros_visual_slam isaac_ros_visual_slam_hawk.launch.py

5. [Terminal 2] In a second terminal check that the VSLAM node is publishing the
   odometry messages. 
   
   Attach another terminal to the running container for issuing other ROS 2 commands.

   .. code:: bash

      cd ${ISAAC_ROS_WS}/src/isaac_ros_common
      ./scripts/run_dev.sh
   
   Verify that you are getting the output from the ``visual_slam`` node at the
   same rate as the input.

   .. code:: bash

      ros2 topic hz /visual_slam/tracking/odometry --window 20


Typically, if you are running ``visual_slam`` on Jetson, it is
recommended that you **NOT** evaluate with live visualization.
